<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 如果启动注解模式，只扫描controller注解 -->
	<context:component-scan base-package="com.huateng.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- SpringMvc的注解开启，比如@RequestMapping,@RespondBody等 -->
	<mvc:annotation-driven />
	
	<!-- 在Controller中开启使用@Autowired,@Resource这两个注解 -->
	<context:annotation-config/>
	
	<!-- 注册SpringMvc的拦截器 -->
	<!-- 这个配置将拦截所有的请求，除了下面声明的 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/loginController/login.do"/>
			<mvc:exclude-mapping path="/loginController/goLogin.do"/>
			<bean class="com.huateng.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>-->
	
	<!-- 过滤掉对静态资源js,styles,images的请求 :因为springmvc拦截所有请求包括了对静态资源的加载，所以要将其除外-->
	<mvc:resources mapping="/javascript/**" location="/js/"/>  
    <mvc:resources mapping="/styles/**" location="/css/"/>  
    <mvc:resources mapping="/images/**" location="/images/"/> 

	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>
    <!-- 框架异常处理Handler -->
	<bean id="exceptionResolver" class="com.huateng.exception.resolver.CustomExceptionResolver"></bean>  
</beans>
